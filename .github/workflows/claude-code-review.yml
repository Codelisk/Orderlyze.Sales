name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  claude-review:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Get PR diff
      id: diff
      run: |
        # Get the diff between base and head
        git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} > pr_diff.txt
        
        # Limit diff size to avoid API limits (max ~8000 tokens)
        head -n 500 pr_diff.txt > pr_diff_limited.txt
        
        # Get list of changed files
        git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} > changed_files.txt
        
        # Create a summary
        echo "Changed files:" > pr_summary.txt
        cat changed_files.txt >> pr_summary.txt
        echo -e "\n\nDiff preview (first 500 lines):" >> pr_summary.txt
        cat pr_diff_limited.txt >> pr_summary.txt
    
    - name: Review with Claude
      id: claude_review
      env:
        ANTHROPIC_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
      run: |
        # Escape and prepare content
        PR_TITLE=$(echo '${{ github.event.pull_request.title }}' | sed 's/"/\\"/g')
        PR_BODY=$(echo '${{ github.event.pull_request.body }}' | sed 's/"/\\"/g' | tr '\n' ' ')
        PR_CONTENT=$(cat pr_summary.txt | sed 's/"/\\"/g' | tr '\n' ' ')
        
        # Create JSON payload using jq to properly escape
        PAYLOAD=$(jq -n \
          --arg model "claude-3-haiku-20240307" \
          --arg title "$PR_TITLE" \
          --arg body "$PR_BODY" \
          --arg content "$PR_CONTENT" \
          '{
            model: $model,
            max_tokens: 4096,
            messages: [{
              role: "user",
              content: ("You are a code reviewer. Review this pull request and provide feedback. Focus on: 1) Code quality and best practices, 2) Potential bugs or issues, 3) Security concerns, 4) Performance considerations, 5) Suggestions for improvement. Be constructive and specific.\n\nPR Title: " + $title + "\nPR Description: " + $body + "\n\nChanges:\n" + $content)
            }]
          }')
        
        # Make API request
        RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
          -H "x-api-key: $ANTHROPIC_API_KEY" \
          -H "anthropic-version: 2023-06-01" \
          -H "content-type: application/json" \
          -d "$PAYLOAD")
        
        # Extract the review content
        REVIEW=$(echo "$RESPONSE" | jq -r '.content[0].text // "Error: Could not get review"')
        
        # Save review to file
        echo "$REVIEW" > claude_review.md
        
        # Check for API errors
        if echo "$RESPONSE" | jq -e '.error' > /dev/null; then
          echo "Error from Claude API:"
          echo "$RESPONSE" | jq '.error'
          exit 1
        fi
    
    - name: Post review comment
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const review = fs.readFileSync('claude_review.md', 'utf8');
          
          const comment = `## ðŸ¤– Claude Code Review\n\n${review}\n\n---\n*This is an automated code review by Claude AI. Please consider the suggestions but use your judgment.*`;
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });